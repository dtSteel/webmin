(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(c){function b(g){return new RegExp("^(("+g.join(")|(")+"))\\b","i")}var d=["package","message","import","syntax","required","optional","repeated","reserved","default","extensions","packed","bool","bytes","double","enum","float","string","int32","int64","uint32","uint64","sint32","sint64","fixed32","fixed64","sfixed32","sfixed64"];var e=b(d);c.registerHelper("hintWords","protobuf",d);var a=new RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");function f(g){if(g.eatSpace()){return null}if(g.match("//")){g.skipToEnd();return"comment"}if(g.match(/^[0-9\.+-]/,false)){if(g.match(/^[+-]?0x[0-9a-fA-F]+/)){return"number"}if(g.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/)){return"number"}if(g.match(/^[+-]?\d+([EeDd][+-]?\d+)?/)){return"number"}}if(g.match(/^"([^"]|(""))*"/)){return"string"}if(g.match(/^'([^']|(''))*'/)){return"string"}if(g.match(e)){return"keyword"}if(g.match(a)){return"variable"}g.next();return null}c.defineMode("protobuf",function(){return{token:f}});c.defineMIME("text/x-protobuf","protobuf")});